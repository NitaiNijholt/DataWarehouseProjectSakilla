Provided files:

1. SK_W_DUMP.sql
2. WareHouse_EER.mwb
3. Warehouse_Populating.sql
4. WareHouseSQL_Script.sql

Steps:

WAREHOUSE
0. EER diagram
1. Creation of Datawarehouse 
2. Populating the warehouse

DUMP FILE
0. reason for dump file
1. Creation of dump file
2. Using the dump file

NOTES:

WAREHOUSE
0. 
The EER diagram file is the 'WareHouse_EER.mwb' file, this was used for design purposes. 
BEWARE: The creation script deviates from the script generated by forward engineering this EER diagram, therefore the provided creation script should be used 


1. 
The creation of the warehouse does not have to many important things to be careful of.
The warehouse will be called 'sakila_warehouse'. This should be taken into account.
This is what the 'WareHouseSQL_Script.sql' does.

2.
The population script assumes that there are two accesible databases:

	1. sakila (containing original sakila data)
	2. sakila_warehouse (created with the previously mentioned step)

If an error arises from foreign_key checks. This can be resolved using: 'SET FOREIGN_KEY_CHECKS = 0;'
The population is done wiht the 'Warehouse_Populating.sql' script

#################################################################################################################

DUMP FILE
0. 
To make the work process easier we used a dump file created from the fully populated warehouse. 
This was done since the populating script could take quite a long time to fill the fact_table since this query contains many joins

1. 
To create the dump file one has to have a fully populated sakila_warehouse. To create this look at the WAREHOUSE section.
The dumpfile was created using a terminal on a windows operating system. Beware that the steps might be different for linux or MacOS.

The required command is provided by MySQL and is called 'mysqldump'
Unless manually set this will not be recognised by the terminal unless it is run from a specific MySQL directory.

The place of this directory depends on how MySQL has been installed. 
The path for the directory on the system we used was: "C:\Program Files\MySQL\MySQL Server 8.0\bin"
Use the cd [path_name] command to go to this directory

Then to create the the dump file the following command can be used:
mysqldump -u root -p sakila_warehouse > [Path_location to store]

As an example of a proper path_location our loaction is provided below with some personal data redacted:
"C:\Users\[REDACTED_ACCOUNT_NAME]\Desktop\DB\project assingment\Dump\SK_W_Dump.sql"

BEWARE: 
After the -u, the account name with full access to the sakila_warehouse should be provided.
If this account has a password then the terminal will require this before the dump will be created.

2.
NOTE: the 'SK_W_DUMP.sql' file contains a pre-created dump file to use if you wish to skip the populating script

To use the dumpfile first one has to use the creation script discussed under the WAREHOUSE.1 section.
After this navigate to the the same directory as in the dump file creation part. 

Then one can run the following command:
mysql -u root -p sakila_warehouse < [Path to dump file]

BEWARE:
The account after has to have full acces to the sakila_warehouse and if it has a password the terminal will ask for this.